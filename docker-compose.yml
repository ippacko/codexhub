services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: codexhub
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
  redis:
    image: redis:7
    ports:
      - "6379:6379"

  gateway:
    build: ./gateway
    environment:
      JWT_SECRET: devsecretdevsecretdevsecretdevsecret
      TARGET_AUTH: http://auth-service:8081
      TARGET_CATALOG: http://catalog-service:8082
      TARGET_INVENTORY: http://inventory-service:8083
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - catalog-service
      - inventory-service

  auth-service:
    build: ./auth-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/codexhub
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      JWT_SECRET: devsecretdevsecretdevsecretdevsecret
    depends_on:
      db:
        condition: service_healthy
  catalog-service:
    build: ./catalog-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/codexhub
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      db:
        condition: service_healthy
  inventory-service:
    build: ./inventory-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/codexhub
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      REDIS_HOST: redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
  worker:
    build: ./worker
    environment:
      REDIS_HOST: redis
    depends_on:
      redis:
        condition: service_started
